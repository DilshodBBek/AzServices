// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using SP.Infrastructure.DataAccess;

#nullable disable

namespace SP.Infrastructure.Migrations
{
    [DbContext(typeof(StadiumDbContext))]
    [Migration("20231217211821_init")]
    partial class init
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("SP.Domain.Entities.BookingEntity.BookingStatusEntity", b =>
                {
                    b.Property<int>("BookingStatusId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("BookingStatusId"));

                    b.Property<string>("BookingStatusNameEn")
                        .HasColumnType("text");

                    b.Property<string>("BookingStatusNameRu")
                        .HasColumnType("text");

                    b.Property<string>("BookingStatusNameUz")
                        .HasColumnType("text");

                    b.HasKey("BookingStatusId");

                    b.ToTable("Bookings");
                });

            modelBuilder.Entity("SP.Domain.Entities.Categories.CategoryEntity", b =>
                {
                    b.Property<int>("CategoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("CategoryId"));

                    b.Property<string>("CategoryNameEn")
                        .HasColumnType("text");

                    b.Property<string>("CategoryNameRu")
                        .HasColumnType("text");

                    b.Property<string>("CategoryNameUz")
                        .HasColumnType("text");

                    b.HasKey("CategoryId");

                    b.ToTable("Categories");
                });

            modelBuilder.Entity("SP.Domain.Entities.LocationEntities.DistrictEntity", b =>
                {
                    b.Property<int>("DistrictId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("DistrictId"));

                    b.Property<string>("DistrictNameEn")
                        .HasColumnType("text");

                    b.Property<string>("DistrictNameRu")
                        .HasColumnType("text");

                    b.Property<string>("DistrictNameUz")
                        .HasColumnType("text");

                    b.HasKey("DistrictId");

                    b.ToTable("Districts");
                });

            modelBuilder.Entity("SP.Domain.Entities.LocationEntities.RegionEntity", b =>
                {
                    b.Property<int>("RegionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("RegionId"));

                    b.Property<string>("RegionNameEn")
                        .HasColumnType("text");

                    b.Property<string>("RegionNameRu")
                        .HasColumnType("text");

                    b.Property<string>("RegionNameUz")
                        .HasColumnType("text");

                    b.HasKey("RegionId");

                    b.ToTable("Regions");
                });
#pragma warning restore 612, 618
        }
    }
}
